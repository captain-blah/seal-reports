@using Seal.Model
@{
    ReportView view = Model;
    ReportModel reportModel = view.Model;
    Report report = view.Report;
}

<script>
    $(document).ready(function () {
        $('#tc_@(view.IdSuffix) li:eq(@view.GetNumericValue("model_menu_index")) a').tab('show');
        $('#tc_@(view.IdSuffix) a').click(function (e) {
             if (generateHTMLDisplay) submitViewParameter("@report.ExecutionGUID", "@view.ViewId", "model_menu_index", $($(this).attr('href')).index());
            @if (report.HasNVD3Chart)
            {<text>
            redrawNVD3Charts();
            </text>
            }
            redrawDataTables();
        });
    });
</script>


@if (reportModel.Pages.Count > 1 && !report.PrintLayout && view.GetValue("model_menu_type") != "none")
{
    <ul id="tc_@(view.IdSuffix)" class="nav nav-@(view.GetValue("model_menu_style"))s @(view.GetValue("model_menu_type") != "top" ? "nav-stacked" : "")  @(view.GetBoolValue("model_menu_justified") ? "nav-justified" : "")">
        @if (view.GetBoolValue("show_summary_table"))
        {
            <li class="active"><a data-toggle="@view.GetValue("model_menu_style")" href='#@(view.IdSuffix + "_summary")'>@report.Translate("Summary")</a></li>
        }
        @for (int row = 1; row < reportModel.SummaryTable.RowCount && row < reportModel.Pages.Count + 1; row++)
        {
            ResultPage page = reportModel.Pages[row - 1];
            string val = "";
            for (int col = 0; col < reportModel.SummaryTable.ColumnCount; col++)
            {
                ResultCell cell = reportModel.SummaryTable[row, col];
                if (!cell.IsTotal)
                {
                    val += string.IsNullOrEmpty(val) ? "" : ",";
                    val += cell.ValueNoHTML;
                }
            }
            <li class='@(row==1 && !view.GetBoolValue("show_summary_table") ? "active" :"")'>
                <a data-toggle="@view.GetValue("model_menu_style")" href='#@(view.IdSuffix + page.PageId)'>@Raw(val)</a>
            </li>
        }
    </ul>
}
