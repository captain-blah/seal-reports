<?xml version="1.0" encoding="utf-8"?><Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><GUID>f519ae4f-e032-4ada-9e2f-c89fd61abab3</GUID><ViewGUID>d5c29a44-1e4f-4962-a1de-0550bb60aaf5</ViewGUID><InputValues><ReportRestriction><GUID>42575294-3a31-41e7-8462-6f00fd7a6687</GUID><Type>Text</Type><DisplayName>Data Source</DisplayName><EnumGUID>d19c1021-441b-4497-b113-0e0f33d0e643</EnumGUID><PivotPosition>Row</PivotPosition><TypeEd>Text</TypeEd><EnumGUIDEL>d19c1021-441b-4497-b113-0e0f33d0e643</EnumGUIDEL><Prompt>Prompt</Prompt><TypeRe>Text</TypeRe><ChangeOperator>false</ChangeOperator><EnumGUIDRE>d19c1021-441b-4497-b113-0e0f33d0e643</EnumGUIDRE></ReportRestriction></InputValues><Sources><ReportSource><GUID>6f0b50b7-a67c-4aa2-8264-c60cbb9669dd</GUID><Name>Data Sources</Name><Connections><MetaConnection><GUID>545c7f2f-4693-4ffc-a62d-d8d8d5d8be96</GUID><Name>connection</Name><ConnectionString>Provider=SQLOLEDB;data source=localhost;initial catalog=adb;Integrated Security=SSPI;</ConnectionString></MetaConnection></Connections><ConnectionGUID>545c7f2f-4693-4ffc-a62d-d8d8d5d8be96</ConnectionGUID><IsNoSQL>true</IsNoSQL><MetaData><Tables><MetaTable><GUID>f045914d-5e02-4790-b78b-101926a6538e</GUID><DefinitionScript>@using System.Data&#xD;
@{&#xD;
    MetaTable metaTable = Model;&#xD;
	ReportExecutionLog log = metaTable;&#xD;
&#xD;
    DataTable table = new DataTable();&#xD;
    table.Columns.Add(new DataColumn("data_source", typeof(string)));&#xD;
    table.Columns.Add(new DataColumn("errors", typeof(string)));&#xD;
    metaTable.NoSQLTable = table;&#xD;
    log.LogMessage("{0} column(s) defined", table.Columns.Count);&#xD;
}&#xD;
</DefinitionScript><LoadScript>@using System.Data&#xD;
@{&#xD;
    MetaTable metaTable = Model;&#xD;
    DataTable table = metaTable.NoSQLTable;&#xD;
    ReportExecutionLog log = metaTable;&#xD;
    ReportModel reportModel = metaTable.NoSQLModel;&#xD;
    Report report = (reportModel != null ? reportModel.Report : null);&#xD;
&#xD;
    if (report != null &amp;&amp; report.Tag != null) {&#xD;
        foreach (var item in ((List&lt;MetaSource&gt;) report.Tag)) {&#xD;
            table.Rows.Add(&#xD;
                item.Name, &#xD;
                item.Tag.ToString()&#xD;
                );&#xD;
        }&#xD;
    }&#xD;
    log.LogMessage("{0} record(s) loaded", table.Rows.Count);&#xD;
}&#xD;
</LoadScript><Alias>SealMasterTable</Alias><DynamicColumns>true</DynamicColumns><Columns><MetaColumn><GUID>fe69a038-f923-4caf-ab18-7b0016ed64df</GUID><Name>Errors</Name><Type>Text</Type><Category>Master</Category><DisplayName>Errors</DisplayName><DisplayOrder>2</DisplayOrder></MetaColumn><MetaColumn><GUID>0bb7d6ec-cb42-42fc-9fb1-d9a79deb9ab1</GUID><Name>data_source</Name><Type>Text</Type><Category>Master</Category><DisplayName>Data source</DisplayName><DisplayOrder>1</DisplayOrder></MetaColumn></Columns></MetaTable></Tables><Enums><MetaEnum><GUID>d19c1021-441b-4497-b113-0e0f33d0e643</GUID><Name>Sources</Name></MetaEnum></Enums></MetaData></ReportSource></Sources><Models><ReportModel><GUID>6c0f99ec-acaf-4e1c-ab7c-1c57af205a1a</GUID><Name>Sources</Name><SourceGUID>6f0b50b7-a67c-4aa2-8264-c60cbb9669dd</SourceGUID><Elements><ReportElement><GUID>fd599212-c859-4904-9e8b-b8bb9e16518b</GUID><Name>data_source</Name><DisplayName /><PivotPosition>Row</PivotPosition><AggregateFunction>Count</AggregateFunction><MetaColumnGUID>0bb7d6ec-cb42-42fc-9fb1-d9a79deb9ab1</MetaColumnGUID></ReportElement><ReportElement><GUID>ac8954a8-13c0-4a41-bfa1-e56f6148c00c</GUID><Name>Errors</Name><DisplayName /><PivotPosition>Row</PivotPosition><AggregateFunction>Count</AggregateFunction><MetaColumnGUID>fe69a038-f923-4caf-ab18-7b0016ed64df</MetaColumnGUID></ReportElement></Elements></ReportModel></Models><Tasks><ReportTask><GUID>27bcb127-6bb1-431a-a9aa-f8ff5d319473</GUID><Name>Refresh enumerated lists</Name><CancelReport>false</CancelReport><SourceGUID>6f0b50b7-a67c-4aa2-8264-c60cbb9669dd</SourceGUID><Script>@{
	//Refresh Data Sources enumerated lists
	//Useful to schedule this task (for example once a day) if your enumerated values have changed.. 
	ReportTask task = Model;&#xD;
    Report report = task.Report;&#xD;
	var helper = new TaskHelper(task);&#xD;
    &#xD;
    //Stores all sources in the Tag&#xD;
    report.Tag = new List&lt;MetaSource&gt;();&#xD;
    &#xD;
    var sources = report.InputValues.FirstOrDefault(i =&gt; i.DisplayNameEl.StartsWith("Data Source"));&#xD;
    foreach (var sourceName in sources.EnumValues.ToList()) {&#xD;
        var source = Repository.Instance.Sources.OrderBy(i =&gt; i.Name).FirstOrDefault(i =&gt; i.Name == sourceName);&#xD;
        if (source != null) {&#xD;
            ((List&lt;MetaSource&gt;) report.Tag).Add(source);&#xD;
            string errors = "";&#xD;
            try&#xD;
            {&#xD;
                report.LogMessage("Processing data source '{0}'", source.Name);&#xD;
                foreach (MetaEnum enumItem in source.MetaData.Enums.Where(i =&gt; i.IsDynamic).OrderBy(i =&gt; i.Name))&#xD;
                {&#xD;
                    report.LogMessage("Refreshing Enum '{0}'", enumItem.Name);&#xD;
                    enumItem.RefreshEnum(false);&#xD;
                    if (!string.IsNullOrEmpty(enumItem.Error))&#xD;
                    {&#xD;
                        report.LogMessage("ERROR:" + enumItem.Error);&#xD;
                        errors += enumItem.Error + "\r\n";&#xD;
                    }&#xD;
                }&#xD;
                report.LogMessage("Saving data source '{0}' in '{1}'\r\n", source.Name, source.FilePath);&#xD;
                source.SaveToFile();&#xD;
            }&#xD;
            catch (Exception ex)&#xD;
            {&#xD;
                report.LogMessage("\r\n[UNEXPECTED ERROR RECEIVED]\r\n{0}\r\n", ex.Message);&#xD;
                errors += ex.Message + "\r\n";&#xD;
            }&#xD;
            &#xD;
            //Save errors in source Tag&#xD;
            source.Tag = errors;&#xD;
        }&#xD;
    }    
}</Script><SortOrder>1</SortOrder></ReportTask></Tasks><Views><ReportView><GUID>d5c29a44-1e4f-4962-a1de-0550bb60aaf5</GUID><Name>view</Name><Views><ReportView><GUID>bc58a6ba-2e2d-4c2e-ab14-2a57b31f5d61</GUID><Name>Model</Name><Views><ReportView><GUID>f5618523-ff8f-497b-819e-d6fc5ec21e3e</GUID><Name>Model Container</Name><Views><ReportView><GUID>8ee921f8-922d-4094-8bec-b47039567f55</GUID><Name>Page Table</Name><TemplateName>Page Table</TemplateName><SortOrder>1</SortOrder></ReportView><ReportView><GUID>9b97bb7a-ab30-467b-8238-c4d565f543c6</GUID><Name>Chart JS</Name><TemplateName>Chart JS</TemplateName><SortOrder>2</SortOrder></ReportView><ReportView><GUID>7ac065fb-8990-4173-9490-402029798864</GUID><Name>Chart NVD3</Name><TemplateName>Chart NVD3</TemplateName><SortOrder>3</SortOrder></ReportView><ReportView><GUID>620da91a-2a89-4061-b5e2-35af877bb51e</GUID><Name>Chart Plotly</Name><TemplateName>Chart Plotly</TemplateName><SortOrder>4</SortOrder></ReportView><ReportView><GUID>cd4cc89c-3635-4a80-a8d1-21faa5b9c1a3</GUID><Name>Data Table</Name><TemplateName>Data Table</TemplateName><SortOrder>5</SortOrder></ReportView></Views><TemplateName>Model Container</TemplateName><SortOrder>1</SortOrder></ReportView></Views><TemplateName>Model</TemplateName><ModelGUID>6c0f99ec-acaf-4e1c-ab7c-1c57af205a1a</ModelGUID><SortOrder>1</SortOrder></ReportView></Views><TemplateName>Report</TemplateName><Parameters><Parameter><Name>messages_mode</Name><Value>enabledshownexec</Value></Parameter></Parameters><SortOrder>0</SortOrder></ReportView></Views><InitScript>@{&#xD;
    Report report = Model;&#xD;
	ReportExecutionLog log = report;&#xD;
&#xD;
    log.LogMessage("Executing Init Script");&#xD;
&#xD;
    //Fill folders enum&#xD;
    var sourcesEnum = report.Sources[0].MetaData.Enums.FirstOrDefault(i =&gt; i.Name == "Sources");&#xD;
    if (sourcesEnum.Values.Count == 0) {&#xD;
        //Init the sources enums&#xD;
        foreach (var source in Repository.Instance.Sources) {&#xD;
            sourcesEnum.Values.Add(new MetaEV() { Id = source.Name, });&#xD;
        }&#xD;
     }&#xD;
 }&#xD;
</InitScript><Schedules><ReportSchedule><GUID>fc056480-31c1-41bc-afc0-2baefecc1024</GUID><Name>schedule for Tasks</Name><OutputGUID /></ReportSchedule></Schedules></Report>